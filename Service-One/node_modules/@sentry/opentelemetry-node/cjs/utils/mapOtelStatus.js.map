{"version":3,"file":"mapOtelStatus.js","sources":["../../../src/utils/mapOtelStatus.ts"],"sourcesContent":["import { SpanStatusCode } from '@opentelemetry/api';\nimport type { Span as OtelSpan } from '@opentelemetry/sdk-trace-base';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport type { SpanStatusType as SentryStatus } from '@sentry/core';\n\n// canonicalCodesHTTPMap maps some HTTP codes to Sentry's span statuses. See possible mapping in https://develop.sentry.dev/sdk/event-payloads/span/\nconst canonicalCodesHTTPMap: Record<string, SentryStatus> = {\n  '400': 'failed_precondition',\n  '401': 'unauthenticated',\n  '403': 'permission_denied',\n  '404': 'not_found',\n  '409': 'aborted',\n  '429': 'resource_exhausted',\n  '499': 'cancelled',\n  '500': 'internal_error',\n  '501': 'unimplemented',\n  '503': 'unavailable',\n  '504': 'deadline_exceeded',\n} as const;\n\n// canonicalCodesGrpcMap maps some GRPC codes to Sentry's span statuses. See description in grpc documentation.\nconst canonicalCodesGrpcMap: Record<string, SentryStatus> = {\n  '1': 'cancelled',\n  '2': 'unknown_error',\n  '3': 'invalid_argument',\n  '4': 'deadline_exceeded',\n  '5': 'not_found',\n  '6': 'already_exists',\n  '7': 'permission_denied',\n  '8': 'resource_exhausted',\n  '9': 'failed_precondition',\n  '10': 'aborted',\n  '11': 'out_of_range',\n  '12': 'unimplemented',\n  '13': 'internal_error',\n  '14': 'unavailable',\n  '15': 'data_loss',\n  '16': 'unauthenticated',\n} as const;\n\n/**\n * Get a Sentry span status from an otel span.\n *\n * @param otelSpan An otel span to generate a sentry status for.\n * @returns The Sentry span status\n */\nexport function mapOtelStatus(otelSpan: OtelSpan): SentryStatus {\n  const { status, attributes } = otelSpan;\n\n  const httpCode = attributes[SemanticAttributes.HTTP_STATUS_CODE];\n  const grpcCode = attributes[SemanticAttributes.RPC_GRPC_STATUS_CODE];\n\n  const code = typeof httpCode === 'string' ? httpCode : typeof httpCode === 'number' ? httpCode.toString() : undefined;\n  if (code) {\n    const sentryStatus = canonicalCodesHTTPMap[code];\n    if (sentryStatus) {\n      return sentryStatus;\n    }\n  }\n\n  if (typeof grpcCode === 'string') {\n    const sentryStatus = canonicalCodesGrpcMap[grpcCode];\n    if (sentryStatus) {\n      return sentryStatus;\n    }\n  }\n\n  const statusCode = status.code;\n  if (statusCode === SpanStatusCode.OK || statusCode === SpanStatusCode.UNSET) {\n    return 'ok';\n  }\n\n  return 'unknown_error';\n}\n"],"names":["SemanticAttributes","SpanStatusCode"],"mappings":";;;;;AAKA;AACA,MAAM,qBAAqB,GAAiC;AAC5D,EAAE,KAAK,EAAE,qBAAqB;AAC9B,EAAE,KAAK,EAAE,iBAAiB;AAC1B,EAAE,KAAK,EAAE,mBAAmB;AAC5B,EAAE,KAAK,EAAE,WAAW;AACpB,EAAE,KAAK,EAAE,SAAS;AAClB,EAAE,KAAK,EAAE,oBAAoB;AAC7B,EAAE,KAAK,EAAE,WAAW;AACpB,EAAE,KAAK,EAAE,gBAAgB;AACzB,EAAE,KAAK,EAAE,eAAe;AACxB,EAAE,KAAK,EAAE,aAAa;AACtB,EAAE,KAAK,EAAE,mBAAmB;AAC5B,CAAE,EAAA;AACF;AACA;AACA,MAAM,qBAAqB,GAAiC;AAC5D,EAAE,GAAG,EAAE,WAAW;AAClB,EAAE,GAAG,EAAE,eAAe;AACtB,EAAE,GAAG,EAAE,kBAAkB;AACzB,EAAE,GAAG,EAAE,mBAAmB;AAC1B,EAAE,GAAG,EAAE,WAAW;AAClB,EAAE,GAAG,EAAE,gBAAgB;AACvB,EAAE,GAAG,EAAE,mBAAmB;AAC1B,EAAE,GAAG,EAAE,oBAAoB;AAC3B,EAAE,GAAG,EAAE,qBAAqB;AAC5B,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,IAAI,EAAE,cAAc;AACtB,EAAE,IAAI,EAAE,eAAe;AACvB,EAAE,IAAI,EAAE,gBAAgB;AACxB,EAAE,IAAI,EAAE,aAAa;AACrB,EAAE,IAAI,EAAE,WAAW;AACnB,EAAE,IAAI,EAAE,iBAAiB;AACzB,CAAE,EAAA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,QAAQ,EAA0B;AAChE,EAAE,MAAM,EAAE,MAAM,EAAE,UAAW,EAAA,GAAI,QAAQ,CAAA;AACzC;AACA,EAAE,MAAM,WAAW,UAAU,CAACA,sCAAkB,CAAC,gBAAgB,CAAC,CAAA;AAClE,EAAE,MAAM,WAAW,UAAU,CAACA,sCAAkB,CAAC,oBAAoB,CAAC,CAAA;AACtE;AACA,EAAE,MAAM,OAAO,OAAO,aAAa,QAAA,GAAW,QAAS,GAAE,OAAO,QAAS,KAAI,WAAW,QAAQ,CAAC,QAAQ,EAAG,GAAE,SAAS,CAAA;AACvH,EAAE,IAAI,IAAI,EAAE;AACZ,IAAI,MAAM,YAAa,GAAE,qBAAqB,CAAC,IAAI,CAAC,CAAA;AACpD,IAAI,IAAI,YAAY,EAAE;AACtB,MAAM,OAAO,YAAY,CAAA;AACzB,KAAI;AACJ,GAAE;AACF;AACA,EAAE,IAAI,OAAO,QAAS,KAAI,QAAQ,EAAE;AACpC,IAAI,MAAM,YAAa,GAAE,qBAAqB,CAAC,QAAQ,CAAC,CAAA;AACxD,IAAI,IAAI,YAAY,EAAE;AACtB,MAAM,OAAO,YAAY,CAAA;AACzB,KAAI;AACJ,GAAE;AACF;AACA,EAAE,MAAM,UAAA,GAAa,MAAM,CAAC,IAAI,CAAA;AAChC,EAAE,IAAI,UAAW,KAAIC,kBAAc,CAAC,EAAG,IAAG,UAAW,KAAIA,kBAAc,CAAC,KAAK,EAAE;AAC/E,IAAI,OAAO,IAAI,CAAA;AACf,GAAE;AACF;AACA,EAAE,OAAO,eAAe,CAAA;AACxB;;;;"}