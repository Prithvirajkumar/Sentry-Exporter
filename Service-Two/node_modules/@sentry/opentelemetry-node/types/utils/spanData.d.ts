import type { Context, SpanOrigin } from '@sentry/types';
type SentryTags = Record<string, string>;
type SentryData = Record<string, unknown>;
type Contexts = Record<string, Context>;
/** @deprecated This will be removed in v8. */
export interface AdditionalOtelSpanData {
    data: SentryData;
    tags: SentryTags;
    contexts: Contexts;
    metadata: unknown;
    origin?: SpanOrigin;
}
/**
 * Add data that should be added to the sentry span resulting from the given otel span ID.
 * @deprecated This will be removed in v8. This was never meant to be public API.
 */
export declare function addOtelSpanData(otelSpanId: string, { data, tags, contexts, metadata, origin }: Partial<AdditionalOtelSpanData>): void;
/**
 * @deprecated This will do nothing and will be removed in v8.
 */
export declare function getOtelSpanData(_otelSpanId: string): AdditionalOtelSpanData;
/**
 * @deprecated This will do nothing and will be removed in v8.
 */
export declare function clearOtelSpanData(otelSpanId: string): void;
export {};
//# sourceMappingURL=spanData.d.ts.map