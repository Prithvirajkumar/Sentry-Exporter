import { Transaction } from '@sentry/core';
import { getSentrySpan } from './spanMap.js';

/* eslint-disable deprecation/deprecation */

const OTEL_SPAN_DATA_MAP = new Map();

/**
 * Add data that should be added to the sentry span resulting from the given otel span ID.
 * @deprecated This will be removed in v8. This was never meant to be public API.
 */
function addOtelSpanData(
  otelSpanId,
  { data, tags, contexts, metadata, origin },
) {
  const sentrySpan = getSentrySpan(otelSpanId);
  if (!sentrySpan) {
    return;
  }

  if (data) {
    Object.keys(data).forEach(prop => {
      const value = data[prop];
      sentrySpan.setData(prop, value);
    });
  }

  if (tags) {
    Object.keys(tags).forEach(prop => {
      sentrySpan.setTag(prop, tags[prop]);
    });
  }

  if (origin) {
    sentrySpan.origin = origin;
  }

  if (sentrySpan instanceof Transaction) {
    if (metadata) {
      // eslint-disable-next-line deprecation/deprecation
      sentrySpan.setMetadata(metadata);
    }

    if (contexts) {
      Object.keys(contexts).forEach(prop => {
        sentrySpan.setContext(prop, contexts[prop]);
      });
    }
  }
}

/**
 * @deprecated This will do nothing and will be removed in v8.
 */
function getOtelSpanData(_otelSpanId) {
  return { data: {}, tags: {}, contexts: {}, metadata: {} };
}

/**
 * @deprecated This will do nothing and will be removed in v8.
 */
function clearOtelSpanData(otelSpanId) {
  OTEL_SPAN_DATA_MAP.delete(otelSpanId);
}

export { addOtelSpanData, clearOtelSpanData, getOtelSpanData };
//# sourceMappingURL=spanData.js.map
